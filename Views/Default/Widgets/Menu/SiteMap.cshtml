@using global::Web.Helpers
@using ASP.Web.Model.Models
@model MenuCategory
@if (Model.Id > 0)
{

    <div class="chart" id="site-map"></div>
}
@using (Html.BeginScripts())
{
<script>
        MENUSiteMap = [ config,root];
    MENUSiteMapParent = {};
       @{ var u = DataCurrentHelper.UniqueSeoCode == "vi" ? "": ("/" + DataCurrentHelper.UniqueSeoCode);
        }
        @foreach (var level1st in Model.MenuLinkCategoryMappings.Where(e => e.ParentId == null && e.IsActive).OrderBy(e => e.DisplayOrder)){
            if (level1st != null)
            {
                var level1stHref = "";
                if (string.IsNullOrEmpty(level1st.HashTag))
                {
                    level1stHref = level1st.UrlRewrite.Slug == "/" ? (u + "/") : (u + "/" + level1st.UrlRewrite.Slug);
                }
                else { level1stHref = level1st.HashTag; }
                level1stHref = level1stHref == "#" ? "" : level1stHref;

                   @:MENUSiteMapParent["@level1st.Id"] = {parent: root, HTMLclass: 'light-gray', stackChildren: true, text: { name: "@Html.Raw(level1st.Alias ?? level1st.UrlRewrite.Title)", title: "@level1stHref"},link: { href: "@level1stHref"}  };
                    
                   @:MENUSiteMap.push(MENUSiteMapParent["@level1st.Id"]);
                   foreach (var level2nd in level1st.MenuLinkCategoryChildren.Where(e => e.IsActive).OrderBy(e => e.DisplayOrder))
                    {
                        var level2ndHref = "";
                        if (string.IsNullOrEmpty(level2nd.HashTag))
                        {
                            level2ndHref = level2nd.UrlRewrite.Slug == "/" ? (u + "/") : (u + "/" + level2nd.UrlRewrite.Slug);
                        }
                        else { level2ndHref = level2nd.HashTag; }
                        level2ndHref = level2ndHref == "#" ? "" : level2ndHref;

                        @:MENUSiteMapParent["@level2nd.Id"] = { parent: MENUSiteMapParent["@level1st.Id"],collapsed: true, text: { name: "@Html.Raw(level2nd.Alias ?? level2nd.UrlRewrite.Title)", title: "@level2ndHref" }, link: { href: "@level2ndHref" } };
                        @:MENUSiteMap.push(MENUSiteMapParent["@level2nd.Id"]);
                        foreach (var level3rd in level2nd.MenuLinkCategoryChildren.Where(e => e.IsActive).OrderBy(e => e.DisplayOrder))
                        {
                            var level3rdHref = "";
                            if (string.IsNullOrEmpty(level3rd.HashTag))
                            {
                                level3rdHref = level3rd.UrlRewrite.Slug == "/" ? (u + "/") : (u + "/" + level3rd.UrlRewrite.Slug);
                            }
                            else { level3rdHref = level3rd.HashTag; }
                            level3rdHref = level3rdHref == "#" ? "" : level3rdHref;

                            @:MENUSiteMap.push({ parent: MENUSiteMapParent["@level2nd.Id"], text: { name: "@Html.Raw(level3rd.Alias ?? level3rd.UrlRewrite.Title)", title: "@level3rdHref" },link: { href: "@level3rdHref"} });
                        }
                    }

                }
        }
</script>
}

